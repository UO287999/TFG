---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Análisis de la base de datos

El conjunto de datos World Happiness 2015-2024 recopila información sobre la felicidad percibida en diferentes países a lo largo de los años. Este dataset proviene de los informes anuales de felicidad publicados por la Red de Soluciones para el Desarrollo Sostenible de la ONU, los cuales se basan en encuestas realizadas a nivel mundial. El dataset tiene una buena cobertura temporal, ya que abarca datos de 2015 a 2024 y permite analizar tendencias a lo largo del tiempo, pero también geográfica, dado que icluye información de diferentes países y regiones del mundo. Este dataset es ampliamente utilizado en estudios de bienestar, calidad de vida y políticas públicas, y contiene métricas económicas y sociales que permiten un análisis estadístico y comparativo. Cada fila del dataset representa un país en un año determinado y contiene variables socioeconómicas y de bienestar que pueden influir en la percepción de felicidad de su población. Estas variables son:

-   Country: Nombre del país.

-   Region: Continente o agrupación geográfica del país.

-   Happiness Score: Puntuación de felicidad promedio en el país (escala de 0 a 10).

-   GDP per capita: Producto Interno Bruto per cápita ajustado por poder adquisitivo.

-   Social Support: Medida de apoyo social basado en la percepción de las personas sobre la ayuda que pueden recibir de familiares y amigos.

-   Healthy Life Expectancy: Esperanza de vida saludable en años.

-   Freedom to Make Life Choices: Libertad para tomar decisiones personales, según encuestas de percepción.

-   Generosity: Nivel de generosidad en la sociedad, basado en donaciones y ayuda a otros.

-   Perceptions of Corruption: Nivel de percepción de corrupción en el gobierno y los negocios. \## Análisis exploratorio inicial

```{r include=FALSE, warning=FALSE}
# Carga de paquetes 
library(readr)
library(readxl)
library(janitor)
library(mice)
library(visdat)
library(outliers)
library(plotly)
library(tidyverse)
library(webshot2)

# Cargamos los datos 
df_original <- read_delim("world_happiness_combined.csv", delim = ";", show_col_types = FALSE)
# Limpiar nombres de columnas
df_original <- clean_names(df_original)
summary(df_original)
str(df_original)
# Hay algunas variables numérias que están puestas como categóricas
df_original <- df_original %>%
  mutate(
    gdp_per_capita = as.numeric(gsub(",", ".", gdp_per_capita)),
    social_support = as.numeric(gsub(",", ".", social_support)),
    freedom_to_make_life_choices = as.numeric(gsub(",", ".", freedom_to_make_life_choices)),
    generosity = as.numeric(gsub(",", ".", generosity)),
    perceptions_of_corruption = as.numeric(gsub(",", ".", perceptions_of_corruption))
  )
# Verificar que ahora sean numéricas
str(df_original)
# Hay un problema con las comas en el happiness score
df_original$happiness_score <- df_original$happiness_score / 100000
# Datos faltantes
is.na(df_original)
# En la base de datos no hay ningún dato faltante

# Detección de Outliers
boxplot(df_original$happiness_score)
boxplot(df_original$gdp_per_capita)
boxplot(df_original$social_support)  
boxplot(df_original$healthy_life_expectancy)
boxplot(df_original$freedom_to_make_life_choices)
boxplot(df_original$generosity)
boxplot(df_original$perceptions_of_corruption)
# Como podemos apreciar gráficamente, hay algunas variables numéricas en las que puede haber valores atípicos
outliers::grubbs.test(df_original$happiness_score)
outliers::grubbs.test(df_original$gdp_per_capita)
outliers::grubbs.test(df_original$social_support)
outliers::grubbs.test(df_original$healthy_life_expectancy)
outliers::grubbs.test(df_original$freedom_to_make_life_choices)
outliers::grubbs.test(df_original$generosity)
outliers::grubbs.test(df_original$perceptions_of_corruption)
# Como el p-valor es > alpha en todos los test, no tenemos outliers
```

```{r echo=FALSE, warning=FALSE}
boxplot(df_original$happiness_score)
boxplot(df_original$gdp_per_capita)
boxplot(df_original$social_support)  
boxplot(df_original$healthy_life_expectancy)
boxplot(df_original$freedom_to_make_life_choices)
boxplot(df_original$generosity)
boxplot(df_original$perceptions_of_corruption)
```


Podemos ver como en la base de datos no hay valores faltantes, y a través de este análisis, vemos como tampoco hay valores atípicos. No obstante, para complementar nuestro análisis de la base de datos World Happiness, hemos considerado integrar información de dos fuentes externas que aportan indicadores políticos y de libertades civiles en los países. Estas bases de datos nos permitirán explorar hasta qué punto la democracia, los derechos políticos y las libertades influyen en la percepción de felicidad de las sociedades.

La primera base de datos que hemos considerado es "Freedom in the World", un informe anual de la organización Freedom House, que evalúa el estado de las libertades políticas y civiles en el mundo. Cada país es clasificado en función de indicadores de democracia, libertades individuales y derechos políticos. El motivo por el que hemos elegido esta base de datos es porque los estudios en ciencias sociales han mostrado que la percepción de felicidad no solo está ligada a factores económicos, sino también a la capacidad de los ciudadanos para expresarse libremente, participar en la política y vivir sin restricciones autoritarias. Incorporar estos datos nos permitirá ver si existe una correlación entre los niveles de libertad y la felicidad percibida en cada país. Como esta base de datos cuenta con una gran cantidad de variables, hemos elegido las siguientes variables de interés:

- Country/Territory: Identificación del país o territorio.
- Region: Indica la zona geográfica del país, similar al regional_indicator del dataset original.
- c/T: Diferencia entre países y territorios, aunque este concepto puede ser delicado según el análisis.
- Edition: Año del reporte, fundamental para el análisis longitudinal.
- Status: Clasificación del país en cuanto a su libertad: Libre (F), Parcialmente Libre (PF) o No Libre (NF).
- PR rating (Political Rights): Puntuación de 1 a 7 sobre derechos políticos.
- CL rating (Civil Liberties): Puntuación de 1 a 7 sobre libertades civiles.

La otra base de datos que hemos elegido para nuestro análisis es "Democracy Data", un dataset que proviene del proyecto TidyTuesday y está basado en estudios académicos sobre democracia y regímenes políticos. Clasifica los países según su sistema de gobierno y proporciona información detallada sobre su historia política. Una de las características que tiene esta base de datos es que tiene datos hasta 2020, por lo que tenemos que considerar que, si vamos a trabajar con ella, tendremos las características completas de las observaciones en un período reducido. Dado que la felicidad no solo depende de factores económicos, sino también de la estabilidad política y la gobernanza, estas variables pueden ayudarnos a explicar por qué algunos países presentan niveles bajos de felicidad a pesar de tener una economía sólida. Al igual que en el caso anterior, como esta base de datos contiene más de 40 variables, hemos decidido quedarnos con aquellas que pensamos que mejor se adaptan a nuestro análisis. Estas variables son:

- country_name: Nombre del país.
- year: Año de observación.
- regime_category: Clasificación del sistema de gobierno (democracia parlamentaria, autocracia civil, dictadura militar, monarquía, etc.).
- is_monarchy: Indica si el país es una monarquía.
- is_democracy: Indica si el país es una democracia.
- is_presidential: Indica si el sistema es presidencialista.
- is_colony: Identifica si el país sigue siendo una colonia.
- is_communist: Indica si el país sigue un régimen comunista.
- spatial_democracy: Evalúa el nivel de democracia en los países vecinos.
- has_full_suffrage: Indica si hay sufragio universal.
- electoral_category: Tipo de elecciones (no democráticas, de partido único, multipartidistas no democráticas o democráticas).
- spatial_electoral: Evalúa la calidad electoral de los países vecinos.
- has_free_and_fair_election: Indica si las elecciones son libres y justas.
- has_alternation: Indica si existe alternancia en el poder.

Ambos datasets complementarán la base de datos de felicidad al agregar información sobre libertades civiles, derechos políticos y calidad democrática. Esto nos permitirá realizar un análisis más profundo y responder preguntas sobre la relación entre política, democracia y bienestar subjetivo en distintos países.

AHORA, TENEMOS QUE TOMAR UNA DECISIÓN: TRABAJAR CON LA UNIÓN DE ESTOS 3 DATASETS, AUNQUE SUPONGA REDUCIR EL PERÍODO DE FECHAS EN VEZ DE 2015 A 2024 DE 2015 A 2020, O NO TRABAJAR CON EL DATASET DE DEMOCRACY PARA SEGUIR TRABAJANDO DE 2015 A 2024.
```{r include=FALSE, warning=FALSE}
library(dplyr)
library(stringr)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(htmlwidgets)
## FREEDOM IN THE WORLD
freedom_todos <- read_excel("All_data_FIW_2013-2024 (1).xlsx", sheet = "FIW13-25", skip = 1)
### Las variables que nos pueden llegar a interesar son:
#### Country/Territory (necesitamos el país/territorio)
#### Region (aunque sea muy parecida a la de regional_indicator, nos puede ser de utilidad)
#### c/T (indica si es país o territorio, aunque no se si deberíamos de meternos con el concepto de soberanía)
#### Edition (necesitamos el año)
#### Status (clasifica la libertad del país)
#### PR (derechos políticos) rating y CL (libertades civiles) rating (la otra opción sería elegir PR, CL y Total porque el rating va de 1 a 7)
freedom_final <- freedom_todos %>%
  select(
    `Country/Territory`, # Nombre del país o territorio
    `Region`,            # Región geográfica
    `C/T`,               # Indica si es país (c) o territorio (t)
    `Edition`,           # Año de edición de los datos
    `Status`,            # Clasificación de libertad (Libre, Parcialmente Libre, No Libre)
    `PR rating`,         # Puntuación de derechos políticos (1-7)
    `CL rating`          # Puntuación de libertades civiles (1-7)
  ) %>%
  rename(
    country = `Country/Territory`,
    region = `Region`,
    country_or_territory = `C/T`,
    year = `Edition`,
    status = `Status`,
    political_rights = `PR rating`,
    civil_liberties = `CL rating`
  )
freedom_final <- freedom_final %>%
  filter(year >= 2015 & year <= 2024)
## DEMOCRACY DATA ==> DEMOCRACY AND DICTATORSHIP
library(democracyData)
democracy_data <-
  democracyData::pacl_update |> 
  janitor::clean_names() |> 
  dplyr::select(
    "country_name" = "pacl_update_country",
    "country_code" = "pacl_update_country_isocode",
    "year",
    "regime_category_index" = "dd_regime",
    "regime_category" = "dd_category",
    "is_monarchy" = "monarchy",
    "is_commonwealth" = "commonwealth",
    "monarch_name",
    "monarch_accession_year" = "monarch_accession",
    "monarch_birthyear",
    "is_female_monarch" = "female_monarch",
    "is_democracy" = "democracy",
    "is_presidential" = "presidential",
    "president_name",
    "president_accesion_year" = "president_accesion",
    "president_birthyear",
    "is_interim_phase" = "interim_phase",
    "is_female_president" = "female_president",
    "is_colony" = "colony",
    "colony_of",
    "colony_administrated_by",
    "is_communist" = "communist",
    "has_regime_change_lag" = "regime_change_lag",
    "spatial_democracy",
    "parliament_chambers" = "no_of_chambers_in_parliament",
    "has_proportional_voting" = "proportional_voting",
    "election_system",
    "lower_house_members" = "no_of_members_in_lower_house",
    "upper_house_members" = "no_of_members_in_upper_house",
    "third_house_members" = "no_of_members_in_third_house",
    "has_new_constitution" = "new_constitution",
    "has_full_suffrage" = "fullsuffrage",
    "suffrage_restriction",
    "electoral_category_index" = "electoral",
    "spatial_electoral",
    "has_alternation" = "alternation",
    "is_multiparty" = "multiparty",
    "has_free_and_fair_election" = "free_and_fair_election",
    "parliamentary_election_year",
    "election_month" = "election_month_year",
    "has_postponed_election" = "postponed_election"
  ) |>
  dplyr::mutate(
    election_month = dplyr::na_if(.data$election_month, "?")
  ) |> 
  tidyr::separate_wider_regex(
    "election_month",
    patterns = c(
      election_month = "\\D+",
      election_year = "\\d{4}$"
    ),
    too_few = "align_start"
  ) |> 
  dplyr::mutate(
    electoral_category = dplyr::case_match(
      .data$electoral_category_index,
      0 ~ "no elections",
      1 ~ "single-party elections",
      2 ~ "non-democratic multi-party elections",
      3 ~ "democratic elections"
    ),
    .after = "electoral_category_index"
  ) |> 
  dplyr::mutate(
    election_month = stringr::str_squish(.data$election_month),
    dplyr::across(
      c(
        tidyselect::ends_with("_index"),
        tidyselect::contains("year"),
        tidyselect::ends_with("_members"),
        "parliament_chambers"
      ),
      as.integer
    ),
    dplyr::across(
      c(
        tidyselect::starts_with("is_"),
        tidyselect::starts_with("has_")
      ),
      as.logical
    )
  )
### Las variables que nos pueden llegar a interesar son:
#### country_name (necesitamos el país/territorio)
#### year (año)
#### regime_category (Parliamentary democracies, Mixed democracies (with weak presidents), Presidential democracies, Civilian autocracies, Military dictatorships, Royal dictatorships)
#### is_monarchy (es monarquía o no)
#### is_democracia (es democracia o no)
#### is_presidential (es presidencial o no)
#### is_colony (es colonia o no)
#### is_communist (es comunista o no)
#### spatial_democracy (como de democráticos son sus países vecinos) 
#### has_full_suffrage (tiene sufragio universal o no)
#### electoral_category (No elections, Single-party elections, non-democratic multi-party elections, democratic elections)
#### spatial_electoral (cómo son las elecciones en sus países vecinos)
#### has_free_and_fair_election (tienen elecciones justas o no)
#### has_alternation (cambian de gobierno o no)
democracy_final <- democracy_data %>%
  select(
    country_name, 
    year, 
    regime_category, 
    is_monarchy, 
    is_democracy, 
    is_presidential, 
    is_colony, 
    is_communist, 
    spatial_democracy, 
    has_full_suffrage, 
    electoral_category, 
    spatial_electoral, 
    has_free_and_fair_election, 
    has_alternation
  )
democracy_final <- democracy_final %>%
  filter(year >= 2015 & year <= 2024)
## UNIÓN DE LOS DATASETS
colnames(df_original)
colnames(democracy_final)
colnames(freedom_final)
# Renombrar la columna 'country_name' en democracy_final para que coincida con df_original
democracy_final <- democracy_final %>%
  rename(country = country_name)
# Ver los países en cada dataset para ver si hay alguna diferencia en la nomenclatura
unique(df_original$country)
unique(democracy_final$country)
unique(freedom_final$country)

setdiff(df_original$country, democracy_final$country)
setdiff(democracy_final$country, df_original$country)
setdiff(df_original$country, freedom_final$country)
setdiff(freedom_final$country, df_original$country)
# Corrección de nombres 
df_original <- df_original %>%
  mutate(country = case_when(
    country == "Trinidad & Tobago" ~ "Trinidad and Tobago",
    country == "Somaliland region" ~ "Somaliland",
    country == "Macedonia" ~ "North Macedonia",
    country == "Palestinian Territories" ~ "State of Palestine",
    country == "Congo" ~ "Congo (Kinshasa)",
    country == "Taiwan Province of China" ~ "Taiwan",
    country == "Hong Kong S.A.R. of China" ~ "Hong Kong",
    country == "Czechia" ~ "Czech Republic",
    country == "Turkiye" ~ "Turkey",
    country == "Argelia" ~ "Algeria",
    country == "Eswatini" ~ "Swaziland",
    TRUE ~ country
  ))
democracy_final <- democracy_final %>%
  mutate(country = case_when(
    country == "Slovak Republic" ~ "Slovakia",
    country == "Korea, Republic of" ~ "South Korea",
    country == "Trinidad &Tobago" ~ "Trinidad and Tobago",
    country == "Congo, Dem. Rep." ~ "Congo (Kinshasa)",
    country == "Congo, Republic of" ~ "Congo (Brazzaville)",
    country == "Gambia, The" ~ "Gambia",
    country == "Côte d`Ivoire" ~ "Ivory Coast",
    TRUE ~ country
  ))
freedom_final <- freedom_final %>%
  mutate(country = case_when(
    country == "Northern Cyprus" ~ "North Cyprus",
    country == "The Gambia" ~ "Gambia",
    country == "Cote d'Ivoire" ~ "Ivory Coast",
    country == "Eswatini" ~ "Swaziland",
    TRUE ~ country
  ))

# PRIMER DATAFRAME: df_completo (2015-2020, con todas las variables)
df_completo <- df_original %>%
  left_join(democracy_final, by = c("country", "year")) %>%
  left_join(freedom_final, by = c("country", "year")) %>%
  filter(year >= 2015 & year <= 2020)  # Filtrar solo hasta 2020

# SEGUNDO DATAFRAME: df_sin_democracia (2015-2024, sin democracy_final)
df_sin_democracia <- df_original %>%
  left_join(freedom_final, by = c("country", "year")) %>%
  filter(year >= 2015 & year <= 2024)  # Mantener toda la información de felicidad y libertad

summary(df_completo)
summary(df_sin_democracia)

na_presence_completo <- df_completo %>%
  summarise(across(everything(), ~ any(is.na(.)), .names = "NA_{.col}"))

na_presence_sin_democracia <- df_sin_democracia %>%
  summarise(across(everything(), ~ any(is.na(.)), .names = "NA_{.col}"))

# OPCIÓN 1: ELIMINAR LOS NA
df_completo_sin_na <- df_completo %>% drop_na()
df_sin_democracia_sin_na <- df_sin_democracia %>% drop_na()

# OPCIÓN 2: SUSTITUIR LOS NA
# VARIABLES NUMÉRICAS
df_completo_numeric <- df_completo %>%
  select_if(is.numeric)
df_sin_democracia_numeric <- df_sin_democracia %>%
  select_if(is.numeric)
imputacion_completo <- mice(df_completo_numeric, method = "pmm", m = 5, maxit = 50, seed = 123)
df_completo_pmm <- complete(imputacion_completo)
imputacion_sin_democracia <- mice(df_sin_democracia_numeric, method = "pmm", m = 5, maxit = 50, seed = 123)
df_sin_democracia_pmm <- complete(imputacion_sin_democracia)
df_completo_pmm <- bind_cols(df_completo %>% select(-colnames(df_completo_numeric)), df_completo_pmm)
df_sin_democracia_pmm <- bind_cols(df_sin_democracia %>% select(-colnames(df_sin_democracia_numeric)), df_sin_democracia_pmm)
# VARIABLES CATEGÓRICAS
md.pattern(df_completo_pmm)
vis_miss(df_completo_pmm, sort_miss=TRUE)
na_presence_completo_pmm <- df_completo_pmm %>%
  summarise(across(everything(), ~ any(is.na(.)), .names = "NA_{.col}"))
df_completo_pmm <- df_completo_pmm %>%
  mutate(
    regional_indicator = case_when(
      country == "Greece" ~ "Western Europe",
      country == "Cyprus" ~ "Western Europe",
      country == "Gambia" ~ "Sub-Saharan Africa",
      TRUE ~ regional_indicator
    ),
    is_colony = ifelse(country == "Libya", FALSE, is_colony)
  ) %>%
  filter(!country %in% c("North Cyprus", "Kosovo", "Somaliland", "State of Palestine"))


md.pattern(df_sin_democracia_pmm)
vis_miss(df_sin_democracia_pmm, sort_miss=TRUE)
na_presence_sin_democracia_pmm <- df_sin_democracia_pmm %>%
  summarise(across(everything(), ~ any(is.na(.)), .names = "NA_{.col}"))
df_sin_democracia_pmm <- df_sin_democracia_pmm %>%
  mutate(
    regional_indicator = case_when(
      country == "Greece" ~ "Western Europe",
      country == "Cyprus" ~ "Western Europe",
      country == "Gambia" ~ "Sub-Saharan Africa",
      TRUE ~ regional_indicator
    ),
  ) %>%
  filter(!country %in% c("State of Palestine"))
```

Ahora que ya tenemos preparado el dataset, es momento de empezar a ver la evolución de la variable objetivo a lo largo del tiempo. Para ello, podemos hacer uso de mapas que nos ayudan a interpretar la información.

```{r include=FALSE, warning=FALSE}
webshot::install_phantomjs()
guardar_mapa <- function(df, titulo, filename) {
  world_map <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")
  world_map <- world_map %>%
    left_join(df, by = c("name" = "country"))
  
  mapa <- plot_ly(world_map, 
                  type = "choropleth",
                  locations = ~iso_a3,
                  z = ~happiness_score,
                  text = ~name,
                  colorscale = "Blues") %>%
    layout(title = titulo)
  
  saveWidget(mapa, "temp.html", selfcontained = TRUE)
  webshot("temp.html", filename)
  
  cat(paste0("![](", filename, ")\n"))
}

# Aplicar la función a cada dataset
guardar_mapa(df_completo_sin_na, "Mapa de Felicidad por País (Completo sin NA)", "output_map_1.png")
guardar_mapa(df_sin_democracia_sin_na, "Mapa de Felicidad por País (Sin democracia sin NA)", "output_map_2.png")
guardar_mapa(df_completo_pmm, "Mapa de Felicidad por País (Completo PMM)", "output_map_3.png")
guardar_mapa(df_sin_democracia_pmm, "Mapa de Felicidad por País (Sin democracia PMM)", "output_map_4.png")
```

Por otro lado, también podemos utilizar gráficos de violines. En este caso, podemos ver cómo la puntuación de la felicidad varía en función de la región.

```{r include=FALSE, warning=FALSE}
p <- ggplot(df_completo_sin_na, aes(x = regional_indicator, y = happiness_score, fill = regional_indicator)) +
  geom_violin(alpha = 0.7) + 
  theme_minimal() + 
  labs(title = "Distribución de Felicidad por Región", x = "Región", y = "Happiness Score") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
if (knitr::is_latex_output()) {
  ggsave("violines_felicidad.png", p)
  cat("![](violines_felicidad.png)")
} else {
  ggplotly(p)
}

p <- ggplot(df_sin_democracia_sin_na, aes(x = regional_indicator, y = happiness_score, fill = regional_indicator)) +
  geom_violin(alpha = 0.7) + 
  theme_minimal() + 
  labs(title = "Distribución de Felicidad por Región", x = "Región", y = "Happiness Score") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
if (knitr::is_latex_output()) {
  ggsave("violines_felicidad.png", p)
  cat("![](violines_felicidad.png)")
} else {
  ggplotly(p)
}

p <- ggplot(df_completo_pmm, aes(x = regional_indicator, y = happiness_score, fill = regional_indicator)) +
  geom_violin(alpha = 0.7) + 
  theme_minimal() + 
  labs(title = "Distribución de Felicidad por Región", x = "Región", y = "Happiness Score") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
if (knitr::is_latex_output()) {
  ggsave("violines_felicidad.png", p)
  cat("![](violines_felicidad.png)")
} else {
  ggplotly(p)
}

p <- ggplot(df_sin_democracia_pmm, aes(x = regional_indicator, y = happiness_score, fill = regional_indicator)) +
  geom_violin(alpha = 0.7) + 
  theme_minimal() + 
  labs(title = "Distribución de Felicidad por Región", x = "Región", y = "Happiness Score") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
if (knitr::is_latex_output()) {
  ggsave("violines_felicidad.png", p)
  cat("![](violines_felicidad.png)")
} else {
  ggplotly(p)
}

p <- ggplot(df_sin_democracia_pmm, aes(x = region, y = happiness_score, fill = region)) +
  geom_violin(alpha = 0.7) + 
  theme_minimal() + 
  labs(title = "Distribución de Felicidad por Región", x = "Región", y = "Happiness Score") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
if (knitr::is_latex_output()) {
  ggsave("violines_felicidad.png", p)
  cat("![](violines_felicidad.png)")
} else {
  ggplotly(p)
}
# Se ve bastante mejor por region que por regional_indicator
```

Otra de las variables que nos puede ayudar a interpretar la información es la percepción de la corrupción según las diferentes regiones.

```{r echo=FALSE, warning=FALSE}
p <- ggplot(df_completo_sin_na, aes(x = regional_indicator, y = perceptions_of_corruption, fill = regional_indicator)) +
  geom_violin(alpha = 0.7) + 
  theme_minimal() + 
  labs(title = "Distribución de la Percepción de Corrupción por Región", x = "Región", y = "Percepción de Corrupción") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
if (knitr::is_latex_output()) {
  ggsave("violines_felicidad.png", p)
  cat("![](violines_felicidad.png)")
} else {
  ggplotly(p)
}
p <- ggplot(df_sin_democracia_sin_na, aes(x = regional_indicator, y = perceptions_of_corruption, fill = regional_indicator)) +
  geom_violin(alpha = 0.7) + 
  theme_minimal() + 
  labs(title = "Distribución de la Percepción de Corrupción por Región", x = "Región", y = "Percepción de Corrupción") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
if (knitr::is_latex_output()) {
  ggsave("violines_felicidad.png", p)
  cat("![](violines_felicidad.png)")
} else {
  ggplotly(p)
}
p <- ggplot(df_completo_pmm, aes(x = regional_indicator, y = perceptions_of_corruption, fill = regional_indicator)) +
  geom_violin(alpha = 0.7) + 
  theme_minimal() + 
  labs(title = "Distribución de la Percepción de Corrupción por Región", x = "Región", y = "Percepción de Corrupción") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
if (knitr::is_latex_output()) {
  ggsave("violines_felicidad.png", p)
  cat("![](violines_felicidad.png)")
} else {
  ggplotly(p)
}
p <- ggplot(df_sin_democracia_pmm, aes(x = regional_indicator, y = perceptions_of_corruption, fill = regional_indicator)) +
  geom_violin(alpha = 0.7) + 
  theme_minimal() + 
  labs(title = "Distribución de la Percepción de Corrupción por Región", x = "Región", y = "Percepción de Corrupción") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
if (knitr::is_latex_output()) {
  ggsave("violines_felicidad.png", p)
  cat("![](violines_felicidad.png)")
} else {
  ggplotly(p)
}
```

Otra de las características que tenemos que analizar en esta base de datos es la existencia de valores atípicos que puedan afectar a nuestro análisis.

```{r echo=FALSE, warning=FALSE}
p <- ggplot(df_original, aes(x = factor(year), y = happiness_score)) +
  geom_boxplot() +
  theme_minimal() +
  labs(title = "Distribución de Felicidad por Año", x = "Año", y = "Happiness Score")
if (knitr::is_latex_output()) {
  ggsave("violines_felicidad.png", p)
  cat("![](violines_felicidad.png)")
} else {
  ggplotly(p)
}
```

De 2015 a 2020 no vemos valores atípicos, pero en 2021 vemos un valor atípico de 2.52, en 2022 de 2.40, en 2023 de 1.86 y en 2024 de 1.72. Todos estos valores atípicos corresponden con Afganistán. Vamos a entrar en más detalle para ver cuál es la evolución de dicho país.

```{r echo=FALSE, warning=FALSE}
df_afganistan <- df_sin_democracia_pmm %>% filter(country == "Afghanistan")
ggplot(df_afganistan, aes(x = year, y = happiness_score)) +
  geom_line() +
  geom_point() +
  labs(title = "Evolución del Happiness Score en Afganistán", x = "Año", y = "Happiness Score")
df_region <- df_sin_democracia_pmm %>% filter(regional_indicator == "South Asia")
ggplot(df_region, aes(x = year, y = happiness_score, color = country, group = country)) +
  geom_line() +
  labs(title = "Evolución del Happiness Score en Asia del Sur", x = "Año", y = "Happiness Score")
```

Afganistán sufre una gran caída de la felicidad a partir de 2017 y si lo comparamos con países de su región es el que menos puntuación tiene por bastante diferencia. Esto puede haberse dado por diversos factores, como el constante estado de guerra y conflicto en el que se ha encontrado el país, la presencia de los talibanes y otros grupos armados que han aumentado la violencia y el temor en la población, la enorme tasa de pobreza... Vamos a comparar la evolución de Afganistán con sus países vecinos para ver realmente qué puede estar afectando a tal bajada de la felicidad.

```{r echo=FALSE, warning=FALSE}
ggplot(df_region, aes(x = year, y = gdp_per_capita, color = country, group = country)) +
  geom_line() +
  labs(title = "Evolución del PIB en Asia del Sur", x = "Año", y = "PIB")
ggplot(df_region, aes(x = year, y = social_support, color = country, group = country)) +
  geom_line() +
  labs(title = "Evolución del apoyo social en Asia del Sur", x = "Año", y = "Apoyo social")
ggplot(df_region, aes(x = year, y = freedom_to_make_life_choices, color = country, group = country)) +
  geom_line() +
  labs(title = "Evolución de la libertad en la toma de decisiones de los ciudadanos en Asia del Sur", x = "Año", y = "Libertad en la toma de decisiones de los ciudadanos")
ggplot(df_region, aes(x = year, y = political_rights, color = country, group = country)) +
  geom_line() +
  labs(title = "Evolución de la privación de derechos políticos en Asia del Sur", x = "Año", y = "Privación de derechos políticos")
ggplot(df_region, aes(x = year, y = civil_liberties, color = country, group = country)) +
  geom_line() +
  labs(title = "Evolución de la privación de libertades civiles en Asia del Sur", x = "Año", y = "Privación de libertades civiles")
```

Afganistán es el país con PIB más bajo, pero tampoco hay mucha diferencia con el resto; evolucionando acorde con sus países vecinos. Si nos fijamos en el apoyo social, aunque sigue la tendencia de sus vecinos, vemos cómo en el caso de Afganistán el apoyo social baja estrepitosamente hasta el punto de decir que es nulo a partir de 2021; justo cuando los talibanes toman el poder, lo cual ha podido afectar negativamente a la felicidad de los ciudadanos. Afganistán es, con gran diferencia, el país de Asia del Sur donde los ciudadanos tienen menos libertad para tomar decisiones; privándoles de una libertad que afecta de manera directa al descontento de los ciudadanos. Si nos fijamos en el resto de gráficas, vemos cómo Afganistán es el país donde más se ha privado de sus derechos políticos y donde menor libertad civil hay en todo Asia del Sur; lo cual explica por qué Afganistán tiene una puntuación de la felicidad tan baja en comparación con el resto del mundo.

## Regresión Lineal Múltiple

```{r include=FALSE, warning=FALSE}
# Paquetes necesarios -----
library(ggplot2) 
library(ggfortify)
library(GGally)
library(lmtest)
library(tseries)
library(corrplot)
library(car)

# Planteamiento del modelo ----)
plot(df_original) # Hay muchas variables categóricas de las cuales nos desharemos
df_filtrado <- df_original %>%
  filter(year == 2024) %>%
  select(happiness_score, gdp_per_capita, social_support, healthy_life_expectancy, 
         freedom_to_make_life_choices, generosity, perceptions_of_corruption)
plot(df_filtrado)
apply(df_filtrado, 2, shapiro.test) #el 2 es para aplicar por columnas
# Vemos como no hay normalidad en ninguna, pero como la muestra es grande podemos utilizar Pearson
round(cor(df_filtrado, method='pearson'),4) # redondeo a 4 decimales
# Me fijo en la primera columna porque quiero ver la relación de ventas con el resto de variables explicativas
# Parece ser que las variables que mejores predictoras serán de happines_score son social_support, gdp_per_capita y healthy_life_expectancy
cor.mtest(df_filtrado, method='pearson')
# Obtengo 3 matrices distintas: la primera tiene el p-valor asociado, la segunda el extremo inferior del intervalo de confianza y la tercera el extremo superior del intervalo de confianza
round(cor.mtest(df_filtrado, method='pearson')$p,4) # para ver el p-valor redondeado
ggpairs(df_filtrado)
ggpairs(df_filtrado, upper=list(continuous="cor", corMethod ="pearson"))
# Lo más probable es que generosity no sea un buen predictor de la felicidad

# Estimación de los parámetros ----
fit <- lm(happiness_score~gdp_per_capita+social_support+healthy_life_expectancy+freedom_to_make_life_choices+generosity+perceptions_of_corruption, data=df_filtrado)
fit
# Hay algún parámetro parecido a 0; por lo que tenemos que ver si nos sobra algún parámetro.

# Comparación y selección de modelos ----
## Multicolinealidad
vif(fit)
# Como todos menores que 5, no hay problema de multicolinealidad y no vamos a quitar ninguna de las variables, aunque hay alguno que se acerca a 5

## Selección de variables explicativas
summary(fit)
### AIC y BIC
#### AIC
step(fit, k=2)
#### BIC
step(fit, k=log(nrow(df_filtrado)))
# Empiezo con el modelo saturado, va probando a sacar de una en una las variables. Nos interesa que el AIC sea lo más pequeño posible.
# El modelo final sería la felicidad en función del apoyo social, la esperanza de vida, el libre albedrío y la percepción de corrupción
fit <- lm(happiness_score~social_support+healthy_life_expectancy+freedom_to_make_life_choices+perceptions_of_corruption, data=df_filtrado)
fit.f <- step(fit, trace=0)
# Por defecto est? eligiendo el mejor modelo por AIC, aunque en este caso AIC y BIC devuelven el mismo modelo

# Adecuaci?n del modelo
summary(fit)
# El valor del estad?stico F (859.6) y el p-valor < alpha nos permiten concluir que podemos rechazar H0 y, por tanto, el modelo explica los datos. 
# Adem?s, el valor del R2 (0.8134) nos indica que el 81.34% de la varianza de la felicidad es explicada por las variables

# Diagn?stico del modelo
## An?lisis de los residuos
autoplot(fit)
# Parece que los valores de los residuos observados se alejan bastante de los residuos te?ricos

### Normalidad ==> NO SE CUMPLE
jarque.bera.test(fit$residuals)
# Los residuos no siguen una distribuci?n normal, por lo que la normalidad no se cumple

### Media cero ==> SE CUMPLE
mean(fit$residuals)
# Mirando la primera gr?fica, podemos ver como la gr?fica se parece un poco al eje de abscisas, aunque no haya un comportamiento perfectamente lineal de los datos; por lo que diría que la media cero  se cumple

### Homocedasticidad ==> NO SE CUMPLE
# No se mantiene muy constante, por lo que no parece que haya homocedasticidad
bptest(fit, studentize = FALSE)
# Viendo el p-valor, rechazamos H0, por lo que no tenemos varianza constante

### No correlaci?n ==> SE CUMPLE
# Parece ser que no siguen una fluctuaci?n aleatoria del todo
dwtest(fit, alternative='two.sided')
# Como el p-valor > alpha, no rechazamos H0, por lo que los residuos no est?n autocorrelacionados
# Por todo esto, el modelo no es fiable.
```

Al principio, podemos observar que hay bastantes variables que pueden ser buenas predictoras del happiness_score. No obstante, en la selección de variables explicativas, vemos que el mejor modelo es aquel que cuenta con la percepción de la corrupción, la esperanza de vida, la libertad de tomar decisiones y el apoyo social. Al hacer el diagnóstico del modelo, vemos que el modelo no es fiable ya que los errores no tienen homocedasticidad ni normalidad.
