select <- dplyr::select
chart.long <- chart.wide %>%
gather(key = "key", value = "MathAvgScore",
MathAvgScore.0:MathAvgScore.2) %>%
separate(key, into = c("name", "year08"), sep = "\\.") %>%
select(-c("X1", "name")) %>%
arrange(schoolid, year08) %>%
mutate(year08 = as.numeric(year08))
head(chart.long)
### DATOS LONGITUDINALES
colnames(chart.wide)
chart.wide <- chart.wide %>%
select(-`...1`)  # Elimina la columna innecesaria
select <- dplyr::select
chart.long <- chart.wide %>%
gather(key = "key", value = "MathAvgScore",
MathAvgScore.0:MathAvgScore.2) %>%
separate(key, into = c("name", "year08"), sep = "\\.") %>%
select(-c("X1", "name")) %>%
arrange(schoolid, year08) %>%
mutate(year08 = as.numeric(year08))
head(chart.long)
chart.long <- chart.wide %>%
pivot_longer(
cols = starts_with("MathAvgScore"),  # Selecciona columnas relacionadas con MathAvgScore
names_to = c(".value", "year08"),    # Divide el nombre en base y año
names_sep = "\\."                    # Usa el punto como separador
) %>%
mutate(year08 = as.numeric(year08)) %>%  # Convierte "year08" a numérico
arrange(schoolid, year08)
head(chart.long)
chart.wide = read_csv("chart_wide_condense.csv")
### DATOS LONGITUDINALES
colnames(chart.wide)
select <- dplyr::select
chart.long <- chart.wide %>%
gather(key = "key", value = "MathAvgScore",
MathAvgScore.0:MathAvgScore.2) %>%
separate(key, into = c("name", "year08"), sep = "\\.") %>%
select(-c("...1", "name")) %>%
arrange(schoolid, year08) %>%
mutate(year08 = as.numeric(year08))
head(chart.long)
chart.long
chart.long
chart.long
chart.long
smallchart.long <- filter(chart.long, row_number() <= 72)
head(smallchart.long)
table3chp9 <- head(smallchart.long[,c(2,4,6,7,8,9)])
kable(table3chp9, booktabs=T,
caption= "The first six observations in the long data set for the Charter Schools case study; these lines correspond to the first two observations from the wide data set illustrated in Table (ref:caplontable3chp9).") %>%
kable_styling(latex_options = "scale_down")
### MODELOS MULTINIVEL
# Media a cada año para gráficas
chart.means <- chart.long %>%
group_by(schoolid) %>%
summarise(mean3yr = mean(MathAvgScore, na.rm=T))
chart.wide <- chart.wide %>%
mutate(urban0 = ifelse(urban==1, "urban", "rural"),
charter0 = ifelse(charter==1, "charter",
"public non-charter")) %>%
left_join(chart.means, by="schoolid")
wide.charter <- chart.wide %>% filter(charter == 1)
set.seed(27)  #pulls same random sample every time
samp = sample(1:length(chart.wide$charter==0), size=dim(wide.charter)[1])
samp   # getting equal number of charters and non-charters
wide.public <- chart.wide %>%
filter(charter == 0) %>%
sample_n( dim(wide.charter)[1] )
sampdata <- bind_rows(wide.charter, wide.public) %>%
select(-X1) %>%
mutate(vars = row_number())   # Just use numbers 1-146 as school ids
sampdata <- bind_rows(wide.charter, wide.public) %>%
select(-...1) %>%
mutate(vars = row_number())   # Just use numbers 1-146 as school ids
head(sampdata)
sampdata.l <- sampdata %>%
gather(key = "key", value = "MathAvgScore", MathAvgScore.0:MathAvgScore.2) %>%
separate(key, into = c("name", "year08"), sep = "\\.") %>%
select(-name) %>%
arrange(charter, vars, year08) %>%
mutate(year08 = as.numeric(year08))
head(sampdata.l)
theme.1 <- theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title=element_text(hjust=.9,face="italic",size=12))
###EDA###
# table(chart.wide$charter0)
# table(chart.wide$urban0)
chart.wide %>% count(charter0)
chart.wide %>% count(urban0)
ggplot(data=chart.wide,aes(x=mean3yr)) +
geom_histogram(binwidth=5,color="black",fill="white") +
theme.1 +
xlab("Mean Math Scores by School") + ylab("Frequency")
## CONCERTADO VS NO CONCERTADO
chart.wide %>% group_by(charter0) %>%
summarise(means = mean(mean3yr),
sds = sd(mean3yr),
meds = median(mean3yr),
q1s = quantile(mean3yr, 0.25),
q3s = quantile(mean3yr, 0.75),
mins = min(mean3yr),
maxs = max(mean3yr), ns = n())
## URBANO VS RURAL
chart.wide %>% group_by(urban0) %>%
summarise(means = mean(mean3yr),
sds = sd(mean3yr),
meds = median(mean3yr),
q1s = quantile(mean3yr, 0.25),
q3s = quantile(mean3yr, 0.75),
mins = min(mean3yr),
maxs = max(mean3yr), ns = n())
charter.school <- ggplot(data = chart.wide,
aes(x = factor(charter0), y = mean3yr)) +
geom_boxplot() + coord_flip() +
theme.1 + ylab("Mean Math Scores by School") +
xlab("") + labs(title="(a)")
urban.school <- ggplot(data = chart.wide,
aes(x = factor(urban0), y = mean3yr)) +
geom_boxplot() + coord_flip() +
theme.1 + ylab("Mean Math Scores by School") +
xlab("") + labs(title="(b)")
lon.box1 <- grid.arrange(charter.school, urban.school,
ncol = 1, nrow = 2)
grid.arrange(charter.school,urban.school,ncol=1,nrow=2)
# math score vs. continuous level two covariates
PctFree.school <- ggplot(data = chart.wide,
aes(x = schPctfree, y = mean3yr)) +
geom_point(color="dark grey") + theme.1 +
geom_smooth(se=FALSE,method="lm",color="black") +
xlab("Percent Free/Reduced Lunch") +
ylab("Mean Math Scores\nby School") + labs(title="(a)")
PctSped.school <- ggplot(data = chart.wide,
aes(x = schPctsped, y = mean3yr)) +
geom_point(color="dark grey") + theme.1 +
geom_smooth(se=FALSE,method="lm",color="black") +
xlab("Percent Special Ed") +
ylab("Mean Math Scores\nby School") + labs(title="(b)")
PctNonw.school <- ggplot(data = chart.wide,
aes(x = schPctnonw, y = mean3yr)) +
geom_point(color="dark grey") + theme.1 +
geom_smooth(se=FALSE,method="lm",color="black") +
xlab("Percent Non-white") +
ylab("Mean Math Scores\nby School") + labs(title="(c)")
lon.scat1 <- grid.arrange(PctFree.school, PctSped.school,
PctNonw.school, ncol = 2)
grid.arrange(PctFree.school, PctSped.school,
PctNonw.school, ncol = 2)
## ANÁLISIS EXPLORATORIO DE DATOS LONGITUDINALES
#Lattice plots
#  First change names of Central and Chaska
smallchart.long$schoolName[7:9]="CENTRAL108"
smallchart.long$schoolName[37:39]="CHASKAEAST"
smallchart.long$schoolName[40:42]="CHASKAWEST"
smallchart.long$schoolName[64:66]="CENTRAL13"
ggplot(smallchart.long, aes(x = year08, y = MathAvgScore)) +
geom_point() + geom_line() +
facet_wrap(~schoolName,ncol=6) +
scale_x_continuous(limits=c(0,2), breaks=c(0,1,2)) +
theme.1 + theme(strip.text.x=element_blank()) +
labs(x="Years since 2008",y="Math Score")
ggplot(sampdata.l, aes(x = year08, y = MathAvgScore)) +
geom_line(aes(group = schoolid), color = "dark grey") +
geom_smooth(aes(group = 1), color = "black", size = 1) +
theme.1 +
labs(x = "Years since 2008", y = "Math Score")
ggplot(smallchart.long, aes(x = year08, y = MathAvgScore)) +
geom_point() + stat_smooth(method=lm) +
facet_wrap(~schoolName,ncol=6) +
scale_x_continuous(limits=c(0,2), breaks=c(0,1,2)) +
scale_y_continuous(limits=c(640,665)) +
theme.1 + theme(strip.text.x=element_blank()) +
labs(x="Years since 2008",y="Math Scores")
##Spaghetti Plots
#get rid of NA data
newsampdata.l <- sampdata.l %>% na.omit()
ggplot(newsampdata.l, aes(x = year08, y = MathAvgScore)) +
geom_line(aes(group=schoolid),color="dark grey") +
facet_grid(.~charter0) +
geom_smooth(aes(group=1),color="black",size=1) +
labs(x="Years since 2008",y="Math Scores")
newsampdata.l <- newsampdata.l %>%
mutate(splitup = paste("Quartile",
as.numeric(cut2(schPctfree, g=4))))
ggplot(newsampdata.l,aes(x=year08,y=MathAvgScore)) +
geom_line(aes(group=schoolid),color="dark grey") +
geom_smooth(method="loess",color="black",se=FALSE,size=.75) +
facet_grid(~splitup) +
labs(x="Years since 2008",y="Math Scores") +
scale_x_continuous(limits=c(0,2), breaks=c(0,1,2)) +
theme.1
## MODELO DE DOS ESTACIONES
#95% CI's for slope and intercept of 24 schools	(2 are filtered out since 1 obs)
regressions <- smallchart.long %>%
group_by(schoolid) %>%
do(fit = lm(MathAvgScore ~ year08, data=.))
sd_filter <- smallchart.long %>%
group_by(schoolid) %>%
summarise(sds = sd(MathAvgScore))
regressions <- regressions %>%
right_join(sd_filter, by="schoolid") %>%
filter(!is.na(sds))
lm_info1 <- regressions %>%
tidy(fit) %>%
ungroup() %>%
select(schoolid, term, estimate) %>%
spread(key = term, value = estimate) %>%
rename(rate = year08, int = `(Intercept)`)
lm_info2 <- regressions %>%
tidy(fit) %>%
ungroup() %>%
select(schoolid, term, std.error) %>%
spread(key = term, value = std.error) %>%
rename(se_rate = year08, se_int = `(Intercept)`)
lm_info <- regressions %>%
glance(fit) %>%
ungroup() %>%
select(schoolid, r.squared, df.residual) %>%
inner_join(lm_info1, by = "schoolid") %>%
inner_join(lm_info2, by = "schoolid") %>%
mutate(tstar = qt(.975, df.residual),
intlb = int - tstar * se_int,
intub = int + tstar * se_int,
ratelb = rate - tstar * se_rate,
rateub = rate + tstar * se_rate)
head(data.frame(lm_info))
#lon-cis1.eps
slope.ci <- ggplot(lm_info, aes(y=int, x=1:22)) +
geom_point() + theme.1 +
geom_errorbar(aes(ymin=intlb, ymax=intub)) +
coord_flip() + labs(y="Intercepts",x="Schools",title="(a)")
## MODELO DE DOS ESTACIONES
#95% CI's for slope and intercept of 24 schools	(2 are filtered out since 1 obs)
regressions <- smallchart.long %>%
group_by(schoolid) %>%
do(fit = lm(MathAvgScore ~ year08, data=.))
sd_filter <- smallchart.long %>%
group_by(schoolid) %>%
summarise(sds = sd(MathAvgScore))
regressions <- regressions %>%
right_join(sd_filter, by="schoolid") %>%
filter(!is.na(sds))
lm_info1 <- regressions %>%
tidy(fit) %>%
ungroup() %>%
select(schoolid, term, estimate) %>%
spread(key = term, value = estimate) %>%
rename(rate = year08, int = `(Intercept)`)
# Find slope and intercept of all 618 schools	(540 after filter those with 1 obs)
regressions <- chart.long %>%
group_by(schoolid) %>%
do(fit = lm(MathAvgScore ~ year08, data=.))
sd_filter <- chart.long %>%
group_by(schoolid) %>%
summarise(sds = sd(MathAvgScore))
regressions <- regressions %>%
right_join(sd_filter, by="schoolid") %>%
filter(!is.na(sds))
lm_info1 <- regressions %>%
tidy(fit) %>%
ungroup() %>%
select(schoolid, term, estimate) %>%
spread(key = term, value = estimate) %>%
rename(rate = year08, int = `(Intercept)`)
lm_info2 <- regressions %>%
tidy(fit) %>%
ungroup() %>%
select(schoolid, term, std.error) %>%
spread(key = term, value = std.error) %>%
rename(se_rate = year08, se_int = `(Intercept)`)
lm_info <- regressions %>%
glance(fit) %>%
ungroup() %>%
select(schoolid, r.squared, df.residual) %>%
inner_join(lm_info1, by = "schoolid") %>%
inner_join(lm_info2, by = "schoolid") %>%
mutate(tstar = qt(.975, df.residual),
intlb = int - tstar * se_int,
intub = int + tstar * se_int,
ratelb = rate - tstar * se_rate,
rateub = rate + tstar * se_rate)
head(data.frame(lm_info))
# summary stats for intercepts
summary(lm_info$int)
sd(lm_info$int)
# summary stats for fitted rate of change
summary(lm_info$rate)
sd(lm_info$rate,na.rm=T)
# summary stats for R sq
summary(lm_info$r.squared)
# histograms for ints, rates of change, and Rsq values - lon-histmat1.eps
int.hist1 <- ggplot(lm_info) +
geom_histogram(aes(x=int),
binwidth=4, color="black", fill="white") +
theme.1 +
labs(x="Intercepts", y="Frequency", title="(a)")
rate.hist1 <- ggplot(lm_info) +
geom_histogram(aes(x=rate),
binwidth=2, color="black", fill="white") +
theme.1 +
labs(x="Slopes", y="Frequency", title="(b)")
rsq.hist1 <- ggplot(lm_info) +
geom_histogram(aes(x=r.squared),
binwidth=0.2, color="black", fill="white") +
theme.1 +
labs(x="Rsquared values", y="Frequency", title="(c)")
# correlation between slopes and intercepts for subjects with slope
with(lm_info, cor(int, rate, use="complete.obs"))
# Boxplots to compare school types
chart.wide <- lm_info %>%
select(schoolid, int, rate , r.squared) %>%
right_join(chart.wide, by = "schoolid")
#lon-box2.eps
int.box1 <- ggplot(chart.wide) +
geom_boxplot(aes(x = factor(charter0), y = int)) +
theme.1 + coord_flip() +
labs(x="School Type", y="Fitted Intercepts", title="(a)")
rate.box1 <- ggplot(chart.wide) +
geom_boxplot(aes(x = factor(charter0), y = rate)) +
theme.1 + coord_flip() +
labs(x="School Type", y="Fitted Slopes", title="(b)")
lon.box2 <- grid.arrange(int.box1, rate.box1, nrow=2)
summary(model.d4)
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Trabajo Fin de Grado/TFG/GLM y modelos multinivel.R")
install.packages("nlme")
install.packages("nlme")
install.packages("survival")
install.packages("JM")
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Trabajo Fin de Grado/TFG/GLM y modelos multinivel.R")
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Trabajo Fin de Grado/TFG/GLM y modelos multinivel.R")
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Trabajo Fin de Grado/TFG/Modelos mixtos con R.R")
# LME4
## lmer ==> ajustar un modelo mixto
lmer(formula, data = NULL, REML = TRUE, control = lmerControl(),
start = NULL, verbose = 0L, subset, weights, na.action,
offset, contrasts = NULL, devFunOnly = FALSE, ...)
# LME4
library(lme4)
## lmer ==> ajustar un modelo mixto
lmer(formula, data = NULL, REML = TRUE, control = lmerControl(),
start = NULL, verbose = 0L, subset, weights, na.action,
offset, contrasts = NULL, devFunOnly = FALSE, ...)
### Modelo normal con intercepto aleatorio
ni <- 50
G <- 10
nobs <- ni * G
grupo <- factor(rep(x=1:G, each=ni))
obs <- rep(x=1:ni, times=G)
set.seed(1234567)
x <- runif(n=nobs, min=-5, max=6)
set.seed(1234567)
b0 <- rnorm(n=G, mean=0, sd=sqrt(625)) # Intercepto aleatorio
b0 <- rep(x=b0, each=ni)               # El mismo intercepto aleatorio pero repetido
media <- 4 - 6 * x + b0
set.seed(1234567)
y <- rnorm(n=nobs, mean=media, sd=sqrt(16))
datos <- data.frame(obs, grupo, b0, x, media, y)
library(rmarkdown)
paged_table(datos, options = list(rows.print = 6))
library(ggplot2)
ggplot(datos, aes(x, y, color=grupo) ) +
geom_point() +
labs(colour="Grupo/Cluster")
library(lme4)
fit1 <- lmer(y ~ x + (1 | grupo), data = datos)
summary(fit1)
paged_table(datos, options = list(rows.print = 6))
## glmer ==> ajustar modelos lineales generalizados mixtos
glmer(formula, data = NULL, family = gaussian, control = glmerControl(),
start = NULL, verbose = 0L, nAGQ = 1L, subset, weights, na.action,
offset, contrasts = NULL, mustart, etastart, devFunOnly = FALSE)
### Modelo gamma con intercepto aleatorio
# Generación de datos
rgamma_glm <- function(n, mu, phi) {
x <- rgamma(n=n, shape=1/phi, scale=mu*phi)
return(x)
}
ni <- 20
G <- 10
nobs <- ni * G
grupo <- factor(rep(x=1:G, each=ni))
obs <- rep(x=1:ni, times=G)
set.seed(123456)
x <- runif(n=nobs, min=0, max=1)
set.seed(123456)
b0 <- rnorm(n=G, mean=0, sd=sqrt(9)) # Intercepto aleatorio
b0 <- rep(x=b0, each=ni)             # El mismo intercepto aleatorio pero repetido
media <- exp(2 - 8 * x + b0)
set.seed(123456)
y <- rgamma_glm(n=nobs, mu=media, phi=0.5)
datos <- data.frame(obs, grupo, b0, x, media, y)
# Exploración de datos
paged_table(datos, options = list(rows.print = 6, cols.print=6))
# Dibujo de datos
ggplot(datos, aes(x, y, color=grupo) ) +
geom_point() +
labs(colour="Grupo/Cluster")
# Estimación de parámetros
fit2 <- glmer(y ~ x + (1 | grupo), family=Gamma(link="log"), data = datos)
summary(fit2)
## Aplicación con lme4
head(sleepstudy)
ggplot(data = sleepstudy, aes(x = Days, y = Reaction, color = Subject)) +
geom_point() +
theme_bw() +
facet_wrap(~ Subject) + labs(y = "Reaction time") +
theme(legend.position = "none")
# Modelo con intercepto y pendiente como efectos aleatorios
fit <- lmer(Reaction ~ Days + (Days | Subject), REML = TRUE, data = sleepstudy)
summary(fit)
ranef(fit)
fixef(fit)
coef(fit)
fit <- lmer(Reaction ~ Days + (Days | Subject), REML = TRUE, data = sleepstudy)
sleepstudy$pred_inter_pend_aleatorio <- predict(fit)
ggplot(data = sleepstudy, aes(x = Days, y = pred_inter_pend_aleatorio, color = Subject)) +
geom_line() +
geom_point(aes(x = Days, y = Reaction, color = Subject)) +
geom_abline(intercept = 251.40, slope = 10.47, color = "black", linetype = "dashed", linewidth = 0.5) +
theme_bw() +
facet_wrap(~ Subject) +
theme(legend.position = "none") + labs(y = "Reaction time")
# NLME
## lme ==> ajustar un modelo mixto
lme(fixed, data, random, correlation, weights, subset, method,
na.action, control, contrasts = NULL, keep.data = TRUE)
### Modelo normal con intercepto aleatorio
# Generación de datos
ni <- 50
G <- 10
nobs <- ni * G
grupo <- factor(rep(x=1:G, each=ni))
obs <- rep(x=1:ni, times=G)
set.seed(1234567)
x <- runif(n=nobs, min=-5, max=6)
set.seed(1234567)
b0 <- rnorm(n=G, mean=0, sd=sqrt(625)) # Intercepto aleatorio
b0 <- rep(x=b0, each=ni)               # El mismo intercepto aleatorio pero repetido
media <- 4 - 6 * x + b0
set.seed(1234567)
y <- rnorm(n=nobs, mean=media, sd=sqrt(16))
datos <- data.frame(obs, grupo, b0, x, media, y)
# Exploración de datos
paged_table(datos, options = list(rows.print = 6))
# Dibujo de datos
ggplot(datos, aes(x, y, color=grupo) ) +
geom_point() +
labs(colour="Grupo/Cluster")
library(nlme)
fit1 <- lme(y ~ x, random = ~ 1 | grupo, data=datos)
summary(fit1)
## Aplicación con nlme
head(Oxboys)
plot(Oxboys)
# Modelo con intercepto y pendiente aleatoria
fit <- lme(height ~ age, random= ~ 1 + age | Subject, data=Oxboys, method="REML")
summary(fit)
ranef(fit) # intercepto y pendiente
fixef(fit) # efectos fijos
coef(fit) # efectos finales
library(lattice)
xyplot(height ~ age | Subject, data=Oxboys, fit=fit,
strip=strip.custom(bg="white"),
pch=16, cex=0.7, col='indianred1',
panel = function(x, y, ..., fit, subscripts) {
panel.xyplot(x, y, ...)
ypred <- fitted(fit)[subscripts]
panel.lines(x, ypred, col="deepskyblue3", lwd=1)
},
ylab="Height (cm)", xlab="Centered age")
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Trabajo Fin de Grado/TFG/Modelos mixtos con R.R")
# SURVIVAL
install.packages("survival")
# JM
install.packages("JM")
# SURVIVAL
library(survival)
# JM
library(JM)
## PBC ==> datos basales (una observación por paciente)
?pbc
head(pbc)
summary(pbc)
head(pbc) # edad, serum albumin
## PBCSEQ ==> medidas repetidas del PBC
?pbcseq
head(pbcseq)
summary(pbcseq)
# JM
library(JM)
## AIDS
?aids
head(aids)
summary(aids)
head(aids)
## AIDS.ID ==> datos longitudinales
?aids.id
head(aids.id) # paciente, tiempo, muerte, CD4, tiempo de observación, medicamento, género, infecciones oportunistas previas, zidovudina, inicio, fin, evento
summary(aids.id)
aids.id
aids
aids.id
pbc
pbcseq
## PBC2 ==> datos basales (una observación por paciente)
?pbc2 # pacientes con cirrosis biliar primaria (hígado)
head(pbc2) # edad, albúmina, fosfatasa alcalina, ascitis, aspartato aminotransferasa, bilirrubina, colesterol, cobre, edema, hepatomegalia, id, plaquetas, tiempo de coagulación, sexo, malformaciones, etapa, estado, tiempo, tratamiento, triglicéridos
pbc2.id
pbc2
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Trabajo Fin de Grado/TFG/Paquetes con datos longitudinales.R")
