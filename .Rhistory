if (fed[i]== 0 & fed[i+1]== 1 & fed[i+2]== 0) { freq010= freq010+1} else
if (fed[i]== 0 & fed[i+1]== 1 & fed[i+2]== 1) { freq011= freq011+1} else
if (fed[i]== 1 & fed[i+1]== 1 & fed[i+2]== 0) { freq110= freq110+1} else
if (fed[i]== 1 & fed[i+1]== 1 & fed[i+2]== 1) { freq111= freq111+1}}
chisq.test(c(freq010, freq011, freq110, freq111))
nad=rep(0,217)
for (i in 2:218) {
nad[i] = Tenis[i,2]
}
nad
freq000=0
freq001=0
freq100=0
freq101=0
for (i in 1:192){
if (nad[i]== 0 & nad[i+1]== 0 & nad[i+2]== 0) { freq000= freq000+1} else
if (nad[i]== 0 & nad[i+1]== 0 & nad[i+2]== 1) { freq001= freq001+1} else
if (nad[i]== 1 & nad[i+1]== 0 & nad[i+2]== 0) { freq100= freq100+1} else
if (nad[i]== 1 & nad[i+1]== 0 & nad[i+2]== 1) { freq101= freq101+1}}
table=as.table(matrix(c(freq000, freq001, freq100, freq101), ncol=2))
chisq.test(table)
nad=rep(0,217)
for (i in 2:218) {
nad[i] = Tenis[i,2]
}
nad
freq000=0
freq001=0
freq100=0
freq101=0
for (i in 1:215){
if (nad[i]== 0 & nad[i+1]== 0 & nad[i+2]== 0) { freq000= freq000+1} else
if (nad[i]== 0 & nad[i+1]== 0 & nad[i+2]== 1) { freq001= freq001+1} else
if (nad[i]== 1 & nad[i+1]== 0 & nad[i+2]== 0) { freq100= freq100+1} else
if (nad[i]== 1 & nad[i+1]== 0 & nad[i+2]== 1) { freq101= freq101+1}}
table=as.table(matrix(c(freq000, freq001, freq100, freq101), ncol=2))
chisq.test(table)
freq010=0
freq011=0
freq110=0
freq111=0
for (i in 1:215){
if (nad[i]== 0 & nad[i+1]== 1 & nad[i+2]== 0) { freq010= freq010+1} else
if (nad[i]== 0 & nad[i+1]== 1 & nad[i+2]== 1) { freq011= freq011+1} else
if (nad[i]== 1 & nad[i+1]== 1 & nad[i+2]== 0) { freq110= freq110+1} else
if (nad[i]== 1 & nad[i+1]== 1 & nad[i+2]== 1) { freq111= freq111+1}}
chisq.test(c(freq010, freq011, freq110, freq111))
fed=rep(0,194)
for (i in 2:195) {
fed[i] = Tenis[i,1]
}
freq00=0
freq01=0
freq10=0
freq11=0
freq00=0
freq01=0
freq10=0
freq11=0
for (i in 1:192){
if (fed[i]== 0 & fed[i+1]== 0) { freq00= freq00+1} else
if (fed[i]== 0 & fed[i+1]== 1) { freq01= freq01+1} else
if (fed[i]== 1 & fed[i+1]== 0) { freq10= freq10+1} else
if (fed[i]== 1 & fed[i+1]== 1) { freq11= freq11+1}}
table=as.table(matrix(c(freq00, freq01, freq10, freq11), ncol=2))
chisq.test(table)
nad=rep(0,217)
for (i in 2:218) {
nad[i] = Tenis[i,2]
}
freq00=0
freq01=0
freq10=0
freq11=0
nad=rep(0,217)
for (i in 2:218) {
nad[i] = Tenis[i,2]
}
freq00=0
freq01=0
freq10=0
freq11=0
for (i in 1:215){
if (nad[i]== 0 & nad[i+1]== 0) { freq00= freq00+1} else
if (nad[i]== 0 & nad[i+1]== 1) { freq01= freq01+1} else
if (nad[i]== 1 & nad[i+1]== 0) { freq10= freq10+1} else
if (nad[i]== 1 & nad[i+1]==1) { freq11= freq11+1}}
table=as.table(matrix(c(freq00, freq01, freq10, freq11), ncol=2))
chisq.test(table)
load("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/Lluvia (1).RData")
# EJERCICIOS
## Ejercicio 1
### APARTADO A
x =rep(0,85)
for (i in 1:85) {
if (Lluvia[i,2] >= 0.1 & Lluvia[i,2] <= 5) {x[i-1]=1} else
if (Lluvia[i,2] > 5) {x[i-1]=2}}
### APARTADO B
freq000=0
freq001=0
freq002=0
freq100=0
freq101=0
freq102=0
freq200=0
freq201=0
freq202=0
for (i in 1:82){
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 0) { freq000= freq000+1} else
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 1) { freq001= freq001+1} else
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 2) { freq002= freq002+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 0) { freq100= freq100+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 1) { freq101= freq101+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 2) { freq102= freq102+1} else
if (x[i]== 2 & x[i+1]== 0 & x[i+2]== 0) { freq200= freq200+1} else
if (x[i]== 2 & x[i+1]== 0 & x[i+2]== 1) { freq201= freq201+1} else
if (x[i]== 2 & x[i+1]== 0 & x[i+2]== 2) { freq202= freq202+1}}
chisq.test(c(freq000, freq001, freq002, freq100, freq101, freq102, freq200, freq201, freq202))
x
### APARTADO B
freq000=0
freq001=0
freq002=0
freq100=0
freq101=0
freq102=0
freq200=0
freq201=0
freq202=0
for (i in 1:83){
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 0) { freq000= freq000+1} else
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 1) { freq001= freq001+1} else
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 2) { freq002= freq002+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 0) { freq100= freq100+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 1) { freq101= freq101+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 2) { freq102= freq102+1} else
if (x[i]== 2 & x[i+1]== 0 & x[i+2]== 0) { freq200= freq200+1} else
if (x[i]== 2 & x[i+1]== 0 & x[i+2]== 1) { freq201= freq201+1} else
if (x[i]== 2 & x[i+1]== 0 & x[i+2]== 2) { freq202= freq202+1}}
chisq.test(c(freq000, freq001, freq002, freq100, freq101, freq102, freq200, freq201, freq202))
# EJERCICIOS
## Ejercicio 1
### APARTADO A
x =rep(0,85)
for (i in 1:85) {
if (Lluvia[i,2] >= 0.1 & Lluvia[i,2] <= 5) {x[i-1]=1} else
if (Lluvia[i,2] > 5) {x[i-1]=2}}
### APARTADO B
freq000=0
freq001=0
freq002=0
freq100=0
freq101=0
freq102=0
freq200=0
freq201=0
freq202=0
for (i in 1:83){
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 0) { freq000= freq000+1} else
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 1) { freq001= freq001+1} else
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 2) { freq002= freq002+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 0) { freq100= freq100+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 1) { freq101= freq101+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 2) { freq102= freq102+1} else
if (x[i]== 2 & x[i+1]== 0 & x[i+2]== 0) { freq200= freq200+1} else
if (x[i]== 2 & x[i+1]== 0 & x[i+2]== 1) { freq201= freq201+1} else
if (x[i]== 2 & x[i+1]== 0 & x[i+2]== 2) { freq202= freq202+1}}
chisq.test(c(freq000, freq001, freq002, freq100, freq101, freq102, freq200, freq201, freq202),ncol=3)
table=as.table(matrix(c(freq000, freq001, freq002, freq100, freq101, freq102, freq200, freq201, freq202),ncol=3))
chisq.test(table)
# p-valor > 0.05 ==> ACEPTAMOS HIPOTESIS HOMOGENEIDAD ==> ACEPTAMOS CONDICION DE MARKOV
freq010=0
freq011=0
freq012=0
freq110=0
freq111=0
freq112=0
freq210=0
freq211=0
freq212=0
for (i in 1:83){
if (x[i]== 0 & x[i+1]== 1 & x[i+2]== 0) { freq010= freq010+1} else
if (x[i]== 0 & x[i+1]== 1 & x[i+2]== 1) { freq011= freq011+1} else
if (x[i]== 0 & x[i+1]== 1 & x[i+2]== 2) { freq012= freq012+1} else
if (x[i]== 1 & x[i+1]== 1 & x[i+2]== 0) { freq110= freq110+1} else
if (x[i]== 1 & x[i+1]== 1 & x[i+2]== 1) { freq111= freq111+1} else
if (x[i]== 1 & x[i+1]== 1 & x[i+2]== 2) { freq112= freq112+1} else
if (x[i]== 2 & x[i+1]== 1 & x[i+2]== 0) { freq210= freq210+1} else
if (x[i]== 2 & x[i+1]== 1 & x[i+2]== 1) { freq211= freq211+1} else
if (x[i]== 2 & x[i+1]== 1 & x[i+2]== 2) { freq212= freq212+1}}
table=as.table(matrix(c(freq010, freq011, freq012, freq110, freq111, freq112, freq210, freq211, freq212),ncol=3))
chisq.test(table)
# p-valor > 0.05 ==> ACEPTAMOS HIPOTESIS HOMOGENEIDAD ==> ACEPTAMOS CONDICION DE MARKOV
freq020=0
freq021=0
freq022=0
freq120=0
freq121=0
freq122=0
freq220=0
freq221=0
freq222=0
for (i in 1:83){
if (x[i]== 0 & x[i+1]== 2 & x[i+2]== 0) { freq020= freq020+1} else
if (x[i]== 0 & x[i+1]== 2 & x[i+2]== 1) { freq021= freq021+1} else
if (x[i]== 0 & x[i+1]== 2 & x[i+2]== 2) { freq022= freq022+1} else
if (x[i]== 1 & x[i+1]== 2 & x[i+2]== 0) { freq120= freq120+1} else
if (x[i]== 1 & x[i+1]== 2 & x[i+2]== 1) { freq121= freq121+1} else
if (x[i]== 1 & x[i+1]== 2 & x[i+2]== 2) { freq122= freq122+1} else
if (x[i]== 2 & x[i+1]== 2 & x[i+2]== 0) { freq220= freq220+1} else
if (x[i]== 2 & x[i+1]== 2 & x[i+2]== 1) { freq221= freq221+1} else
if (x[i]== 2 & x[i+1]== 2 & x[i+2]== 2) { freq222= freq222+1}}
table=as.table(matrix(c(freq020, freq021, freq022, freq120, freq121, freq122, freq220, freq221, freq222),ncol=3))
chisq.test(table)
load("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/Tenis (1).RData")
## Ejercicio 2
### APARTADO A
fed=rep(0,195)
for (i in 1:195) {
fed[i] = Tenis[i,1]
}
fed
## Ejercicio 2
### APARTADO A
fed=rep(0,195)
for (i in 1:195) {
fed[i] = Tenis[i,1]
}
freq000=0
freq001=0
freq100=0
freq101=0
for (i in 1:193){
if (fed[i]== 0 & fed[i+1]== 0 & fed[i+2]== 0) { freq000= freq000+1} else
if (fed[i]== 0 & fed[i+1]== 0 & fed[i+2]== 1) { freq001= freq001+1} else
if (fed[i]== 1 & fed[i+1]== 0 & fed[i+2]== 0) { freq100= freq100+1} else
if (fed[i]== 1 & fed[i+1]== 0 & fed[i+2]== 1) { freq101= freq101+1}}
table=as.table(matrix(c(freq000, freq001, freq100, freq101), ncol=2))
chisq.test(table)
table
# p-valor > 0.05 ==> ACEPTAMOS HIPOTESIS HOMOGENEIDAD ==> ACEPTAMOS CONDICION DE MARKOV
freq010=0
freq011=0
freq110=0
freq111=0
for (i in 1:193){
if (fed[i]== 0 & fed[i+1]== 1 & fed[i+2]== 0) { freq010= freq010+1} else
if (fed[i]== 0 & fed[i+1]== 1 & fed[i+2]== 1) { freq011= freq011+1} else
if (fed[i]== 1 & fed[i+1]== 1 & fed[i+2]== 0) { freq110= freq110+1} else
if (fed[i]== 1 & fed[i+1]== 1 & fed[i+2]== 1) { freq111= freq111+1}}
chisq.test(c(freq010, freq011, freq110, freq111))
nad=rep(0,218)
for (i in 1:218) {
nad[i] = Tenis[i,2]
}
freq000=0
freq001=0
freq100=0
freq101=0
for (i in 1:216){
if (nad[i]== 0 & nad[i+1]== 0 & nad[i+2]== 0) { freq000= freq000+1} else
if (nad[i]== 0 & nad[i+1]== 0 & nad[i+2]== 1) { freq001= freq001+1} else
if (nad[i]== 1 & nad[i+1]== 0 & nad[i+2]== 0) { freq100= freq100+1} else
if (nad[i]== 1 & nad[i+1]== 0 & nad[i+2]== 1) { freq101= freq101+1}}
table=as.table(matrix(c(freq000, freq001, freq100, freq101), ncol=2))
chisq.test(table)
freq010=0
freq011=0
freq110=0
freq111=0
for (i in 1:216){
if (nad[i]== 0 & nad[i+1]== 1 & nad[i+2]== 0) { freq010= freq010+1} else
if (nad[i]== 0 & nad[i+1]== 1 & nad[i+2]== 1) { freq011= freq011+1} else
if (nad[i]== 1 & nad[i+1]== 1 & nad[i+2]== 0) { freq110= freq110+1} else
if (nad[i]== 1 & nad[i+1]== 1 & nad[i+2]== 1) { freq111= freq111+1}}
chisq.test(c(freq010, freq011, freq110, freq111))
# p-valor < 0.05 ==> NO ACEPTAMOS HIPOTESIS HOMOGENEIDAD ==> NO ACEPTAMOS CONDICION DE MARKOV
### APARTADO B
fed=rep(0,195)
for (i in 1:195) {
fed[i] = Tenis[i,1]
}
freq00=0
freq01=0
freq10=0
freq11=0
for (i in 1:194){
if (fed[i]== 0 & fed[i+1]== 0) { freq00= freq00+1} else
if (fed[i]== 0 & fed[i+1]== 1) { freq01= freq01+1} else
if (fed[i]== 1 & fed[i+1]== 0) { freq10= freq10+1} else
if (fed[i]== 1 & fed[i+1]== 1) { freq11= freq11+1}}
table=as.table(matrix(c(freq00, freq01, freq10, freq11), ncol=2))
chisq.test(table)
nad=rep(0,218)
for (i in 1:218) {
nad[i] = Tenis[i,2]
}
freq00=0
freq01=0
freq10=0
freq11=0
for (i in 1:217){
if (nad[i]== 0 & nad[i+1]== 0) { freq00= freq00+1} else
if (nad[i]== 0 & nad[i+1]== 1) { freq01= freq01+1} else
if (nad[i]== 1 & nad[i+1]== 0) { freq10= freq10+1} else
if (nad[i]== 1 & nad[i+1]==1) { freq11= freq11+1}}
table=as.table(matrix(c(freq00, freq01, freq10, freq11), ncol=2))
chisq.test(table)
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/PL5.R")
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/PL2.R")
load("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/temp.RData")
## EJERCICIO 2
x =rep(0,1462)
for (i in 1:1462) {
x
x
## EJERCICIO 2
x =rep(0,1462)
for (i in 1:1462) {
x =rep(0,1462)
for (i in 1:1462) {
if (temp[i] > 30) {x[i-1]=1}
temp
## EJERCICIO 2
### APARTADO A
x =rep(0,1462)
for (i in 1:1462)
if (temp[i] > 30) x[i-1]=1
x
### APARTADO B
freq000=0
freq001=0
freq100=0
freq101=0
for (i in 1:251){
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 0) { freq000= freq000+1} else
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 1) { freq001= freq001+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 0) { freq100= freq100+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 1) { freq101= freq101+1}}
table=as.table(matrix(c(freq000, freq001, freq100, freq101), ncol=2))
chisq.test(table)
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/PruebaPL1.R")
## EJERCICIO 2
### APARTADO A
x =rep(0,1462)
x
## EJERCICIO 2
### APARTADO A
x =rep(0,1462)
for (i in 1:1462)
if (temp[i] > 30) x[i-1]=1
load("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/temp.RData")
load("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/temp.RData")
load("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/temp.RData")
## EJERCICIO 2
### APARTADO A
load("temp.Rdata")
## EJERCICIO 2
### APARTADO A
load("temp.Rdata")
load("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/temp.RData")
x =rep(0,1462)
for (i in 1:1462)
if (temp[i] > 30) x[i-1]=1
x
### APARTADO B
freq000=0
freq001=0
freq100=0
freq101=0
for (i in 1:251){
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 0) { freq000= freq000+1} else
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 1) { freq001= freq001+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 0) { freq100= freq100+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 1) { freq101= freq101+1}}
table=as.table(matrix(c(freq000, freq001, freq100, freq101), ncol=2))
chisq.test(table)
# EXAMEN PL1
# PABLO ALVAREZ ARNEDO 71749276V (UO287999)
## EJERCICIO 1
### Estima la probabilidad de que, si se tiran dos veces 10 dados de 6 caras equilibrados e independientes, la suma de las tiradas sea la misma en ambos casos
dados = function(n){
dado1 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado1
dado2 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado2
dado3 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado3
dado4 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado4
dado5 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado5
dado6 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado6
dado7 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado7
dado8 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado8
dado9 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado9
dado10 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado10
suma1 = cumsum(dado1) # calculamos la suma acumulativa de los lanzamientos en dado1
suma2 = cumsum(dado2) # calculamos la suma acumulativa de los lanzamientos en dado2
suma3 = cumsum(dado3) # calculamos la suma acumulativa de los lanzamientos en dado3
suma4 = cumsum(dado4) # calculamos la suma acumulativa de los lanzamientos en dado4
suma5 = cumsum(dado5) # calculamos la suma acumulativa de los lanzamientos en dado5
suma6 = cumsum(dado6) # calculamos la suma acumulativa de los lanzamientos en dado6
suma7 = cumsum(dado7) # calculamos la suma acumulativa de los lanzamientos en dado7
suma8 = cumsum(dado8) # calculamos la suma acumulativa de los lanzamientos en dado8
suma9 = cumsum(dado9) # calculamos la suma acumulativa de los lanzamientos en dado9
suma10 = cumsum(dado10) # calculamos la suma acumulativa de los lanzamientos en dado10
return(suma1==suma2==suma3==suma4==suma5==suma6==suma7==suma8==suma9==suma10) }
# EXAMEN PL1
# PABLO ALVAREZ ARNEDO 71749276V (UO287999)
## EJERCICIO 1
### Estima la probabilidad de que, si se tiran dos veces 10 dados de 6 caras equilibrados e independientes, la suma de las tiradas sea la misma en ambos casos
dados = function(n){
dado1 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado1
dado2 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado2
dado3 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado3
dado4 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado4
dado5 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado5
dado6 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado6
dado7 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado7
dado8 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado8
dado9 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado9
dado10 = sample(c(1,2,3,4,5,6),n,c(1/6,1/6,1/6,1/6,1/6,1/6),replace = TRUE) # generamos n observaciones de los lanzamientos en dado10
suma = sum(dado1,dado2,dado3,dado4,dado5,dado6,dado7,dado8,dado9,dado10) # calculamos la suma de los lanzamientos
return(suma) }
z =rep(0,1000)
estim_suma = function(n){
for (i in 1:1000)
z [i]= dados(n) # repetimos el proceso 1000 veces
mean (z) }
estim_suma(2)
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/PruebaPL1.R")
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/PruebaPL1.R")
load("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/temp.RData")
## EJERCICIO 2
### APARTADO A
x =rep(0,1462)
for (i in 1:1462)
if (temp[i] > 30) x[i-1]=1
x
### APARTADO B
freq000=0
freq001=0
freq100=0
freq101=0
### APARTADO B
freq000=0
freq001=0
freq100=0
freq101=0
for (i in 1:1462){
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 0) { freq000= freq000+1} else
if (x[i]== 0 & x[i+1]== 0 & x[i+2]== 1) { freq001= freq001+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 0) { freq100= freq100+1} else
if (x[i]== 1 & x[i+1]== 0 & x[i+2]== 1) { freq101= freq101+1}}
table=as.table(matrix(c(freq000, freq001, freq100, freq101), ncol=2))
chisq.test(table)
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/PruebaPL1.R")
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Procesos Estocásticos/PL7.R")
# MODELO LINEAL CON R
# Capítulo 1. Introducción
library(faraway)
# GLM y Modelos multinivel
# Capítulo 1: REVISIÓN DE REGRESIÓN LINEAL MÚLTIPLE
## OBJETIVOS
# Packages required for Chapter 1
library(knitr)
# GLM y Modelos multinivel
# Capítulo 1: REVISIÓN DE REGRESIÓN LINEAL MÚLTIPLE
## OBJETIVOS
# Packages required for Chapter 1
install.packages(knitr)
# GLM y Modelos multinivel
# Capítulo 1: REVISIÓN DE REGRESIÓN LINEAL MÚLTIPLE
## OBJETIVOS
# Packages required for Chapter 1
install.packages("knitr")
install.packages("gridExtra")
install.packages("GGally")
install.packages("kableExtra")
install.packages("jtools")
install.packages("rsample")
install.packages("broom")
install.packages("tidyverse")
# GLM y Modelos multinivel
# Capítulo 1: REVISIÓN DE REGRESIÓN LINEAL MÚLTIPLE
## OBJETIVOS
# Packages required for Chapter 1
library(knitr)
library(gridExtra)
library(GGally)
library(kableExtra)
library(jtools)
library(rsample)
library(broom)
library(tidyverse)
## MODELOS DE REGRESIÓN LINEAL MÚLTIPLE
### REGRESIÓN LINEAL SIMPLE CON UN PREDICTOR CONTINUO
model1 <- lm(speed ~ year, data = derby.df)
## MODELOS DE REGRESIÓN LINEAL MÚLTIPLE
### REGRESIÓN LINEAL SIMPLE CON UN PREDICTOR CONTINUO
load("derby.df")
## MODELOS DE REGRESIÓN LINEAL MÚLTIPLE
### REGRESIÓN LINEAL SIMPLE CON UN PREDICTOR CONTINUO
load.data("derby.df")
## MODELOS DE REGRESIÓN LINEAL MÚLTIPLE
### REGRESIÓN LINEAL SIMPLE CON UN PREDICTOR CONTINUO
derby.df <- read_csv("http://www.mosaic-web.org/go/datasets/Derby.csv")
model1 <- lm(speed ~ year, data = derby.df)
## MODELOS DE REGRESIÓN LINEAL MÚLTIPLE
### REGRESIÓN LINEAL SIMPLE CON UN PREDICTOR CONTINUO
data(package = .packages(all.available = TRUE))
source("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Trabajo Fin de Grado/GLM y modelos multinivel.R")
setwd("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Trabajo Fin de Grado/TFG/Documento base")
setwd("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Trabajo Fin de Grado/TFG/Documento base")
setwd("C:/Users/Usuario/OneDrive - Universidad de Oviedo/4 AÑO CIENCIA E INGENIERÍA DE DATOS/Trabajo Fin de Grado/TFG")
shiny::runApp('Documento base/App')
